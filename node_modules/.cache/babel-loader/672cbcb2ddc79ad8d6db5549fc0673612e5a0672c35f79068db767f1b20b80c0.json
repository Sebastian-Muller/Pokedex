{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programacion\\\\Proyectos\\\\Pokemon\\\\pokedex-app\\\\src\\\\components\\\\PokemonCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PopUp from './PopUp';\nimport '../styles/PokemonCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst typeBackgrounds = {\n  fire: require('../assets/types-background/fire.jpg'),\n  water: require('../assets/types-background/water.jpg'),\n  grass: require('../assets/types-background/grass.jpg'),\n  electric: require('../assets/types-background/electric.jpg'),\n  poison: require('../assets/types-background/poison.jpg'),\n  ground: require('../assets/types-background/ground.jpg'),\n  rock: require('../assets/types-background/rock.jpg'),\n  fairy: require('../assets/types-background/fairy.jpg'),\n  fighting: require('../assets/types-background/fighting.jpg'),\n  psychic: require('../assets/types-background/psychic.jpg'),\n  bug: require('../assets/types-background/bug.jpg'),\n  normal: require('../assets/types-background/normal.jpg'),\n  ice: require('../assets/types-background/ice.jpg'),\n  dragon: require('../assets/types-background/dragon.jpg'),\n  ghost: require('../assets/types-background/ghost.jpg'),\n  steel: require('../assets/types-background/steel.jpg'),\n  dark: require('../assets/types-background/dark.jpg'),\n  flying: require('../assets/types-background/flying.jpg')\n};\nconst PokemonCard = _ref => {\n  _s();\n  var _pokemon$types$;\n  let {\n    pokemon,\n    pokemons\n  } = _ref;\n  const [showPopUp, setShowPopUp] = useState(false);\n  // Obtén el tipo primario\n  const primaryType = (_pokemon$types$ = pokemon.types[0]) === null || _pokemon$types$ === void 0 ? void 0 : _pokemon$types$.type.name;\n  const bgImage = typeBackgrounds[primaryType];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [pokemons.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No hay pok\\xE9mon para mostrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 39\n    }, this), pokemons.map(pokemon => {\n      var _pokemon$types, _pokemon$types2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"#\", pokemon.id, \" \", pokemon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-card\",\n          onClick: () => setShowPopUp(true),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pokemon-number\",\n            children: pokemon.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `sprite-bg type-${primaryType}`,\n            style: bgImage ? {\n              backgroundImage: `url(${bgImage})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center'\n            } : {},\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"pokemon-sprite\",\n              src: pokemon.sprites.front_default,\n              alt: pokemon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"pokemon-name\",\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemon-types\",\n            children: ((_pokemon$types = pokemon.types) === null || _pokemon$types === void 0 ? void 0 : _pokemon$types.length) > 0 && pokemon.types.map(typeObj => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `type-badge type-${typeObj.type.name}`,\n              children: typeObj.type.name\n            }, typeObj.type.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [pokemon.name, \" #\", pokemon.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Tipos: \", ((_pokemon$types2 = pokemon.types) === null || _pokemon$types2 === void 0 ? void 0 : _pokemon$types2.map(t => t.type.name).join(', ')) || 'Desconocido']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, pokemon.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    }), showPopUp && /*#__PURE__*/_jsxDEV(PopUp, {\n      pokemon: pokemon,\n      onClose: () => setShowPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n_s(PokemonCard, \"JPX+aWL37/iwTDLhe5Vzyw2oO3Y=\");\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","PopUp","typeBackgrounds","fire","require","water","grass","electric","poison","ground","rock","fairy","fighting","psychic","bug","normal","ice","dragon","ghost","steel","dark","flying","PokemonCard","pokemon","pokemons","showPopUp","setShowPopUp","primaryType","types","type","name","bgImage","length","map","id","cursor","backgroundImage","backgroundSize","backgroundPosition","sprites","front_default","typeObj","t","join"],"sources":["E:/Programacion/Proyectos/Pokemon/pokedex-app/src/components/PokemonCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PopUp from './PopUp';\nimport '../styles/PokemonCard.css';\n\nconst typeBackgrounds = {\n    fire: require('../assets/types-background/fire.jpg'),\n    water: require('../assets/types-background/water.jpg'),\n    grass: require('../assets/types-background/grass.jpg'),\n    electric: require('../assets/types-background/electric.jpg'),\n    poison:  require('../assets/types-background/poison.jpg'),\n    ground: require('../assets/types-background/ground.jpg'),\n    rock: require('../assets/types-background/rock.jpg'),\n    fairy: require('../assets/types-background/fairy.jpg'),\n    fighting: require('../assets/types-background/fighting.jpg'),\n    psychic: require('../assets/types-background/psychic.jpg'),\n    bug: require('../assets/types-background/bug.jpg'),\n    normal: require('../assets/types-background/normal.jpg'),\n    ice: require('../assets/types-background/ice.jpg'),\n    dragon: require('../assets/types-background/dragon.jpg'),\n    ghost: require('../assets/types-background/ghost.jpg'),\n    steel: require('../assets/types-background/steel.jpg'),\n    dark: require('../assets/types-background/dark.jpg'),\n    flying: require('../assets/types-background/flying.jpg')\n};\n\nconst PokemonCard = ({ pokemon, pokemons }) => {\n    const [showPopUp, setShowPopUp] = useState(false);\n    // Obtén el tipo primario\n    const primaryType = pokemon.types[0]?.type.name;\n    const bgImage = typeBackgrounds[primaryType];\n\n    return (\n        <>\n            {pokemons.length === 0 && <div>No hay pokémon para mostrar</div>}\n            {pokemons.map((pokemon) => (\n                <div key={pokemon.id}>\n                    <span>#{pokemon.id} {pokemon.name}</span>\n                    <div className=\"pokemon-card\" onClick={() => setShowPopUp(true)} style={{ cursor: 'pointer' }}>\n                        <span className=\"pokemon-number\">{pokemon.id}</span>\n                        <div\n                            className={`sprite-bg type-${primaryType}`}\n                            style={bgImage ? { backgroundImage: `url(${bgImage})`, backgroundSize: 'cover', backgroundPosition: 'center' } : {}}\n                        >\n                            <img className=\"pokemon-sprite\" src={pokemon.sprites.front_default} alt={pokemon.name} />\n                        </div>\n                        <h2 className=\"pokemon-name\">{pokemon.name}</h2>\n                        <div className=\"pokemon-types\">\n                            {pokemon.types?.length > 0 && pokemon.types.map((typeObj) => (\n                                <span key={typeObj.type.name} className={`type-badge type-${typeObj.type.name}`}>\n                                    {typeObj.type.name}\n                                </span>\n                            ))}\n                        </div>\n                    </div>\n                    <div>\n                        <h3>{pokemon.name} #{pokemon.id}</h3>\n                        <div>\n                            Tipos: {pokemon.types?.map(t => t.type.name).join(', ') || 'Desconocido'}\n                        </div>\n                    </div>\n                </div>\n            ))}\n            {showPopUp && <PopUp pokemon={pokemon} onClose={() => setShowPopUp(false)} />}\n        </>\n    );\n};\n\nexport default PokemonCard;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}