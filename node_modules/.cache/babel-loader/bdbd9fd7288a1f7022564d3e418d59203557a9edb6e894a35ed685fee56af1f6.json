{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programacion\\\\Proyectos\\\\Pokemon\\\\pokedex-app\\\\src\\\\components\\\\PokemonCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PopUp from './PopUp';\nimport '../styles/PokemonCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst typeBackgrounds = {\n  fire: require('../assets/types-background/fire.jpg'),\n  water: require('../assets/types-background/water.jpg'),\n  grass: require('../assets/types-background/grass.jpg'),\n  electric: require('../assets/types-background/electric.jpg')\n  // ...agrega todos los tipos que tengas\n};\n\nconst PokemonCard = _ref => {\n  _s();\n  var _pokemon$types$;\n  let {\n    pokemon\n  } = _ref;\n  const [showPopUp, setShowPopUp] = useState(false);\n  // Obtén el tipo primario\n  const primaryType = (_pokemon$types$ = pokemon.types[0]) === null || _pokemon$types$ === void 0 ? void 0 : _pokemon$types$.type.name;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-card\",\n      onClick: () => setShowPopUp(true),\n      style: {\n        cursor: 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pokemon-number\",\n        children: pokemon.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sprite-bg type-${primaryType}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pokemon-sprite\",\n          src: pokemon.sprites.front_default,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pokemon-name\",\n        children: pokemon.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-types\",\n        children: pokemon.types && pokemon.types.map(typeObj => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `type-badge type-${typeObj.type.name}`,\n          children: typeObj.type.name\n        }, typeObj.type.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), showPopUp && /*#__PURE__*/_jsxDEV(PopUp, {\n      pokemon: pokemon,\n      onClose: () => setShowPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n_s(PokemonCard, \"JPX+aWL37/iwTDLhe5Vzyw2oO3Y=\");\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","PopUp","typeBackgrounds","fire","require","water","grass","electric","PokemonCard","pokemon","showPopUp","setShowPopUp","primaryType","types","type","name","cursor","id","sprites","front_default","map","typeObj"],"sources":["E:/Programacion/Proyectos/Pokemon/pokedex-app/src/components/PokemonCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PopUp from './PopUp';\nimport '../styles/PokemonCard.css';\n\nconst typeBackgrounds = {\n    fire: require('../assets/types-background/fire.jpg'),\n    water: require('../assets/types-background/water.jpg'),\n    grass: require('../assets/types-background/grass.jpg'),\n    electric: require('../assets/types-background/electric.jpg'),\n    // ...agrega todos los tipos que tengas\n};\n\nconst PokemonCard = ({ pokemon }) => {\n    const [showPopUp, setShowPopUp] = useState(false);\n    // Obtén el tipo primario\n    const primaryType = pokemon.types[0]?.type.name;\n\n    return (\n        <>\n            <div className=\"pokemon-card\" onClick={() => setShowPopUp(true)} style={{ cursor: 'pointer' }}>\n                <span className=\"pokemon-number\">{pokemon.id}</span>\n                <div className={`sprite-bg type-${primaryType}`}>\n                    <img className=\"pokemon-sprite\" src={pokemon.sprites.front_default} alt={pokemon.name} />\n                </div>\n                <h2 className=\"pokemon-name\">{pokemon.name}</h2>\n                <div className=\"pokemon-types\">\n                    {pokemon.types && pokemon.types.map((typeObj) => (\n                        <span key={typeObj.type.name} className={`type-badge type-${typeObj.type.name}`}>\n                            {typeObj.type.name}\n                        </span>\n                    ))}\n                </div>\n            </div>\n            {showPopUp && <PopUp pokemon={pokemon} onClose={() => setShowPopUp(false)} />}\n        </>\n    );\n};\n\nexport default PokemonCard;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,2BAA2B;AAAC;AAAA;AAEnC,MAAMC,eAAe,GAAG;EACpBC,IAAI,EAAEC,OAAO,CAAC,qCAAqC,CAAC;EACpDC,KAAK,EAAED,OAAO,CAAC,sCAAsC,CAAC;EACtDE,KAAK,EAAEF,OAAO,CAAC,sCAAsC,CAAC;EACtDG,QAAQ,EAAEH,OAAO,CAAC,yCAAyC;EAC3D;AACJ,CAAC;;AAED,MAAMI,WAAW,GAAG,QAAiB;EAAA;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,MAAMY,WAAW,sBAAGH,OAAO,CAACI,KAAK,CAAC,CAAC,CAAC,oDAAhB,gBAAkBC,IAAI,CAACC,IAAI;EAE/C,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,cAAc;MAAC,OAAO,EAAE,MAAMJ,YAAY,CAAC,IAAI,CAAE;MAAC,KAAK,EAAE;QAAEK,MAAM,EAAE;MAAU,CAAE;MAAA,wBAC1F;QAAM,SAAS,EAAC,gBAAgB;QAAA,UAAEP,OAAO,CAACQ;MAAE;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpD;QAAK,SAAS,EAAG,kBAAiBL,WAAY,EAAE;QAAA,uBAC5C;UAAK,SAAS,EAAC,gBAAgB;UAAC,GAAG,EAAEH,OAAO,CAACS,OAAO,CAACC,aAAc;UAAC,GAAG,EAAEV,OAAO,CAACM;QAAK;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACvF,eACN;QAAI,SAAS,EAAC,cAAc;QAAA,UAAEN,OAAO,CAACM;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eAChD;QAAK,SAAS,EAAC,eAAe;QAAA,UACzBN,OAAO,CAACI,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACO,GAAG,CAAEC,OAAO,iBACxC;UAA8B,SAAS,EAAG,mBAAkBA,OAAO,CAACP,IAAI,CAACC,IAAK,EAAE;UAAA,UAC3EM,OAAO,CAACP,IAAI,CAACC;QAAI,GADXM,OAAO,CAACP,IAAI,CAACC,IAAI;UAAA;UAAA;UAAA;QAAA,QAG/B;MAAC;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,EACLL,SAAS,iBAAI,QAAC,KAAK;MAAC,OAAO,EAAED,OAAQ;MAAC,OAAO,EAAE,MAAME,YAAY,CAAC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAC9E;AAEX,CAAC;AAAC,GAxBIH,WAAW;AAAA,KAAXA,WAAW;AA0BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}